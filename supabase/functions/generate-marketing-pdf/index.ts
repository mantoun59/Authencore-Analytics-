import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

interface MarketingPDFRequest {
  materialId: string;
  title: string;
  description: string;
  category: string;
}

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    console.log('Marketing PDF generation request received');
    
    const { materialId, title, description, category }: MarketingPDFRequest = await req.json();
    
    // Generate professional marketing PDF content
    const pdfContent = await generateMarketingPDF(materialId, title, description, category);
    
    // Create blob and return
    const pdfBlob = new Uint8Array(pdfContent);
    
    return new Response(pdfBlob, {
      headers: {
        ...corsHeaders,
        'Content-Type': 'application/pdf',
        'Content-Disposition': `attachment; filename="${materialId}-marketing-material.pdf"`,
      },
    });
    
  } catch (error) {
    console.error('Error generating marketing PDF:', error);
    return new Response(
      JSON.stringify({ error: 'Failed to generate marketing PDF', details: error.message }), 
      { 
        status: 500, 
        headers: { ...corsHeaders, 'Content-Type': 'application/json' } 
      }
    );
  }
});

async function generateMarketingPDF(materialId: string, title: string, description: string, category: string): Promise<ArrayBuffer> {
  // Using Deno's built-in PDF generation capabilities with proper formatting
  
  const htmlContent = generateMarketingHTML(materialId, title, description, category);
  
  // Convert HTML to PDF using browser automation (simplified for demo)
  // In production, you'd use puppeteer or similar
  const encoder = new TextEncoder();
  const decoder = new TextDecoder();
  
  // For now, return a properly formatted PDF structure
  // This is a simplified PDF structure - in production use proper PDF libraries
  const pdfHeader = "%PDF-1.4\n";
  const pdfCatalog = "1 0 obj\n<< /Type /Catalog /Pages 2 0 R >>\nendobj\n";
  const pdfPages = "2 0 obj\n<< /Type /Pages /Kids [3 0 R] /Count 1 >>\nendobj\n";
  const pdfPage = `3 0 obj\n<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 4 0 R /Resources << /Font << /F1 5 0 R >> >> >>\nendobj\n`;
  
  const content = `BT
/F1 24 Tf
50 750 Td
(${title}) Tj
0 -30 Td
/F1 12 Tf
(${description}) Tj
0 -20 Td
(Category: ${category}) Tj
0 -30 Td
(Generated by AuthenCore Analytics) Tj
0 -20 Td
(Professional Marketing Materials) Tj
ET`;
  
  const pdfContent = `4 0 obj\n<< /Length ${content.length} >>\nstream\n${content}\nendstream\nendobj\n`;
  const pdfFont = "5 0 obj\n<< /Type /Font /Subtype /Type1 /BaseFont /Helvetica >>\nendobj\n";
  
  const xrefTable = `xref
0 6
0000000000 65535 f 
0000000009 00000 n 
0000000058 00000 n 
0000000115 00000 n 
0000000267 00000 n 
0000000${(400 + content.length).toString().padStart(3, '0')} 00000 n 
`;
  
  const trailer = `trailer
<< /Size 6 /Root 1 0 R >>
startxref
${(pdfHeader + pdfCatalog + pdfPages + pdfPage + pdfContent + pdfFont).length}
%%EOF`;
  
  const fullPDF = pdfHeader + pdfCatalog + pdfPages + pdfPage + pdfContent + pdfFont + xrefTable + trailer;
  
  return encoder.encode(fullPDF).buffer;
}

function generateMarketingHTML(materialId: string, title: string, description: string, category: string): string {
  // Generate comprehensive marketing content based on material ID
  const contentMap: Record<string, any> = {
    'company-brochure': {
      sections: [
        {
          title: 'AuthenCore Analytics Overview',
          content: 'Advanced psychological assessment platform providing AI-driven insights for talent decisions.'
        },
        {
          title: 'Key Features',
          content: '• AI-Driven Scoring Engine\n• Distortion Scale Technology\n• Dual Report System\n• GDPR Compliance'
        },
        {
          title: 'Success Metrics',
          content: '50,000+ assessments completed with 85% accuracy rate and 95% client satisfaction.'
        }
      ]
    },
    'complete-assessment-portfolio': {
      sections: [
        {
          title: 'Assessment Portfolio',
          content: 'Comprehensive suite of 12 professional assessments for various organizational needs.'
        },
        {
          title: 'Featured Assessments',
          content: '• Career Launch Assessment\n• Emotional Intelligence\n• Leadership Assessment\n• Cultural Intelligence'
        }
      ]
    },
    'enterprise-solutions': {
      sections: [
        {
          title: 'Enterprise Features',
          content: 'Advanced enterprise capabilities for Fortune 500 companies.'
        },
        {
          title: 'Key Benefits',
          content: '• Bulk assessments\n• Custom branding\n• API integrations\n• Dedicated support'
        }
      ]
    }
  };

  const materialContent = contentMap[materialId] || {
    sections: [
      {
        title: title,
        content: description
      }
    ]
  };

  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <title>${title}</title>
      <style>
        body { font-family: 'Helvetica', sans-serif; margin: 40px; color: #1f2937; }
        .header { background: linear-gradient(135deg, #3b82f6, #1e40af); color: white; padding: 30px; margin: -40px -40px 30px -40px; }
        .logo { font-size: 28px; font-weight: bold; margin-bottom: 10px; }
        .tagline { font-size: 16px; opacity: 0.9; }
        .section { margin-bottom: 30px; }
        .section-title { font-size: 20px; font-weight: bold; color: #1e40af; margin-bottom: 15px; }
        .content { line-height: 1.6; }
        .footer { margin-top: 50px; padding-top: 20px; border-top: 2px solid #e5e7eb; text-align: center; color: #6b7280; }
      </style>
    </head>
    <body>
      <div class="header">
        <div class="logo">AuthenCore Analytics</div>
        <div class="tagline">Professional Assessment Platform</div>
      </div>
      
      <h1>${title}</h1>
      <p class="content">${description}</p>
      
      ${materialContent.sections.map((section: any) => `
        <div class="section">
          <div class="section-title">${section.title}</div>
          <div class="content">${section.content.replace(/\n/g, '<br>')}</div>
        </div>
      `).join('')}
      
      <div class="footer">
        <p>AuthenCore Analytics - Transforming talent decisions through science</p>
        <p>www.authencore.org | info@authencore.org</p>
      </div>
    </body>
    </html>
  `;
}